#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

reorder rootPrims = ["Root", "GridMaterial"]

def Xform "Root"
{
    reorder nameChildren = ["placeHolder", "Material"]
    rel material:binding = None (
        bindMaterialAs = "weakerThanDescendants"
    )

    def Material "Material"
    {
        asset inputs:test = @image.jpeg@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-617.0167, 114.75786)
                    float2 sizeInSubgraph = (115.5, 53)
                    int stackingOrderInSubgraph = 336
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/Material/UnlitSurface_1.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/Material/GeometryModifier.outputs:out>
        string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:realitykit:vertex"]
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (425.44537, 29.610222)
        float2 ui:nodegraph:realitykit:subgraphOutputs:size = (181.5, 99)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 337

        def Shader "UnlitSurface_1"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap
            color3f inputs:color.connect = </Root/Material/Image_1.outputs:out>
            bool inputs:hasPremultipliedAlpha
            float inputs:opacity = 0.5
            float inputs:opacity.connect = </Root/Material/Ifgreater.outputs:out>
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (133.26721, 13.122623)
            float2 ui:nodegraph:node:size = (194.5, 181)
            int ui:nodegraph:node:stackingOrder = 333
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:color", "inputs:opacity", "inputs:applyPostProcessToneMap", "inputs:opacityThreshold", "inputs:opacityThreshold", "outputs:out"]
        }

        def Shader "Image"
        {
            uniform token info:id = "ND_image_float"
            float inputs:default
            prepend asset inputs:file.connect = </Root/Material.inputs:test>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode
            string inputs:vaddressmode
            float outputs:out
            float2 ui:nodegraph:node:pos = (-289.33148, 180.51068)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 312
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uaddressmode", "inputs:texcoord", "inputs:texcoord", "inputs:default"]
        }

        def Shader "Image_1"
        {
            uniform token info:id = "ND_image_color3"
            color3f inputs:default
            prepend asset inputs:file.connect = </Root/Material.inputs:test>
            string inputs:filtertype
            float2 inputs:texcoord
            string inputs:uaddressmode
            string inputs:vaddressmode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-186.40208, -38.04711)
            float2 ui:nodegraph:node:size = (148.5, 199)
            int ui:nodegraph:node:stackingOrder = 313
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:uaddressmode", "inputs:texcoord", "inputs:texcoord", "inputs:texcoord", "inputs:texcoord", "inputs:uaddressmode"]
        }

        def Shader "Ifgreater"
        {
            uniform token info:id = "ND_ifgreater_float"
            float inputs:in1.connect = None
            float inputs:in2 = 1
            float inputs:in2.connect = None
            float inputs:value1 = 0.1
            float inputs:value1.connect = None
            float inputs:value2 = 0.3
            float inputs:value2.connect = </Root/Material/Image.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-92.62188, 150.44287)
            float2 ui:nodegraph:node:size = (109, 163)
            int ui:nodegraph:node:stackingOrder = 262
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in1", "inputs:value1", "inputs:value1", "inputs:value1", "inputs:in1"]
        }
    }

    def Cube "placeHolder" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/Material> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

